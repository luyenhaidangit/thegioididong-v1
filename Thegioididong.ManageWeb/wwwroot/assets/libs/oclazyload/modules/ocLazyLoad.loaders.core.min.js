!function(e){"use strict";e.module("oc.lazyLoad").config(["$provide",function(r){r.decorator("$ocLazyLoad",["$delegate","$q",function(r,o){return r.filesLoader=function(n){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=[],s=[],l=[],a=[],d=null,f=r._getFilesCache();r.toggleWatch(!0),e.extend(t,n);var u=function(o){var n,u=null;if(e.isObject(o)&&(u=o.type,o=o.path),d=f.get(o),e.isUndefined(d)||t.cache===!1){if(null!==(n=/^(css|less|html|htm|js)?(?=!)/.exec(o))&&(u=n[1],o=o.substr(n[1].length+1,o.length)),!u)if(null!==(n=/[.](css|less|html|htm|js)?((\?|#).*)?$/.exec(o)))u=n[1];else{if(r.jsLoader.hasOwnProperty("ocLazyLoadLoader")||!r.jsLoader.hasOwnProperty("requirejs"))return void r._$log.error("File type could not be determined. "+o);u="js"}"css"!==u&&"less"!==u||i.indexOf(o)!==-1?"html"!==u&&"htm"!==u||s.indexOf(o)!==-1?"js"===u||l.indexOf(o)===-1?l.push(o):r._$log.error("File type is not valid. "+o):s.push(o):i.push(o)}else d&&a.push(d)};if(t.serie?u(t.files.shift()):e.forEach(t.files,function(e){u(e)}),i.length>0){var c=o.defer();r.cssLoader(i,function(o){e.isDefined(o)&&r.cssLoader.hasOwnProperty("ocLazyLoadLoader")?(r._$log.error(o),c.reject(o)):c.resolve()},t),a.push(c.promise)}if(s.length>0){var h=o.defer();r.templatesLoader(s,function(o){e.isDefined(o)&&r.templatesLoader.hasOwnProperty("ocLazyLoadLoader")?(r._$log.error(o),h.reject(o)):h.resolve()},t),a.push(h.promise)}if(l.length>0){var p=o.defer();r.jsLoader(l,function(o){e.isDefined(o)&&(r.jsLoader.hasOwnProperty("ocLazyLoadLoader")||r.jsLoader.hasOwnProperty("requirejs"))?(r._$log.error(o),p.reject(o)):p.resolve()},t),a.push(p.promise)}if(0===a.length){var g=o.defer(),m="Error: no file to load has been found, if you're trying to load an existing module you should use the 'inject' method instead of 'load'.";return r._$log.error(m),g.reject(m),g.promise}return t.serie&&t.files.length>0?o.all(a).then(function(){return r.filesLoader(n,t)}):o.all(a).finally(function(e){return r.toggleWatch(!1),e})},r.load=function(n){var t,i=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],s=this,l=null,a=[],d=o.defer(),f=e.copy(n),u=e.copy(i);if(e.isArray(f))return e.forEach(f,function(e){a.push(s.load(e,u))}),o.all(a).then(function(e){d.resolve(e)},function(e){d.reject(e)}),d.promise;if(e.isString(f)?(l=s.getModuleConfig(f),l||(l={files:[f]})):e.isObject(f)&&(l=e.isDefined(f.path)&&e.isDefined(f.type)?{files:[f]}:s.setModuleConfig(f)),null===l){var c=s._getModuleName(f);return t='Module "'+(c||"unknown")+'" is not configured, cannot load.',r._$log.error(t),d.reject(new Error(t)),d.promise}e.isDefined(l.template)&&(e.isUndefined(l.files)&&(l.files=[]),e.isString(l.template)?l.files.push(l.template):e.isArray(l.template)&&l.files.concat(l.template));var h=e.extend({},u,l);return e.isUndefined(l.files)&&e.isDefined(l.name)&&r.moduleExists(l.name)?r.inject(l.name,h,!0):(r.filesLoader(l,h).then(function(){r.inject(null,h).then(function(e){d.resolve(e)},function(e){d.reject(e)})},function(e){d.reject(e)}),d.promise)},r}])}])}(angular);
//# sourceMappingURL=ocLazyLoad.loaders.core.min.js.map